from projen.python import PythonProject, ProjenrcOptions, VenvOptions
from projen import IgnoreFileOptions

python_exec: str = "/Users/christo/.pyenv/versions/3.12.7/envs/bedrock-access-gateway/bin/python3"

venv_options = VenvOptions(
    envdir="/Users/christo/.pyenv/versions/3.12.7/envs/bedrock-access-gateway",
    python_exec=python_exec,
)

class BedrockAccessGatewayProject(PythonProject):

    def __init__(
        self,
        *args,
        **kwargs,
    ) -> None:
        super().__init__(
            *args,
            author_name="Christo De Lange",
            author_email="sands@christodelange.com",
            classifiers=[
                "Development Status :: 3 - Alpha",
                "Framework :: FastAPI",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.12",
                "Topic :: Software Development :: Libraries :: Python Modules",
            ],
            deps=[
                "python==3.12",
                "fastapi>=0.104.1,<0.105.0",
                "uvicorn>=0.24.0,<0.25.0",
                "pydantic>=2.5.2,<2.6.0",
                "boto3>=1.33.6,<1.34.0",
                "python-jose[cryptography]>=3.3.0,<3.4.0", "extras",
                "python-multipart>=0.0.6,<0.1.0",
                "python-dotenv>=1.0.0,<1.1.0",
            ],
            description="A FastAPI-based secure gateway for AWS Bedrock AI models",
            dev_deps=[
                "pytest>=7.4.3,<7.5.0",
                "pytest-cov>=4.1.0,<4.2.0",
                "black>=23.11.0,<23.12.0",
                "flake8>=6.1.0,<6.2.0",
                "isort>=5.12.0,<5.13.0",
                "mypy>=1.7.1,<1.8.0",
                "poetry>=1.8.4,<1.9.0",
            ],
            git_ignore_options=IgnoreFileOptions(
                ignore_patterns=[
                    ".vscode/",
                    ".idea/",
                    "__pycache__/",
                    "*.pyc",
                    ".pytest_cache/",
                    ".coverage",
                    "htmlcov/",
                    "dist/",
                    "build/",
                    "*.egg-info/",
                    ".env",
                    ".DS_Store",
                    "coverage.xml",
                    ".mypy_cache/",
                    "/.aider*",
                    "/.jsii",
                    "/dist",
                    "/lib",
                    "/.vscode",
                    "/.idea",
                    "/coverage",
                    "/cdk.out",
                    "/test-reports",
                    "/node_modules",
                    "/.DS_Store",
                    "/.ai",
                    "/env.txt",
                    "/cmd.txt",
                    "/errors.txt",
                    "/ai",
                    ".env",
                    "__pycache__",
                    "*.pyc",
                    ".pytest_cache",
                    ".coverage",
                    "htmlcov",
                    "dist",
                    "build",
                    "*.egg-info",
                    "!/tsconfig*",
                    "src/.npmrc",
                    ".yalc",
                    "yalc*",
                ]
            ),
            github=False,
            homepage="https://github.com/christokur/bedrock-access-gateway",
            license="Apache-2.0",
            module_name="bedrock-access-gateway",
            name="bedrock-access-gateway",
            package_name="bedrock_access_gateway",
            pip=False,
            poetry=True,
            projenrc_python=True,
            projenrc_python_options=ProjenrcOptions(python_exec=python_exec),
            projenrc_ts=False,
            projenrc_ts_options={},
            python_exec=python_exec,
            readme={"filename": "README.md"},
            version="0.1.0",
            venv=False,
            vscode=True,

            **kwargs,
        )

project = BedrockAccessGatewayProject(
)

# Add custom tasks
project.add_task(
    name="start",
    description="Start the FastAPI server",
    exec="poetry run uvicorn src.api.app:app --reload"
)
project.add_task(
    name="format",
    description="Format code with black and isort",
    exec="poetry run black . && poetry run isort ."
)
project.add_task(
    name="lint",
    description="Run linting tools",
    exec="poetry run flake8 src tests"
)
project.add_task(
    name="type-check",
    description="Run type checking",
    exec="poetry run mypy src"
)

# Docker tasks
project.add_task(
    name="docker:build",
    description="Build Docker image",
    exec="docker build -t bedrock-access-gateway ."
)
project.add_task(
    name="docker:run",
    description="Run Docker container",
    exec="docker run -p 8000:8000 bedrock-access-gateway"
)

project.synth()